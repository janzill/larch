package:
  name: larch
  version: "5.1.0"

source:
  path: ../

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - sympy = sympy:main
    #
    # Would create an entry point called sympy that calls sympy.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:

  build:
    - python {{ python }}
    - cython >=0.29
    - clangdev >=7.0.0
    - llvmdev >=7.0.0
    - intel-openmp >=2018.0
    - openmp

  host:
    - python {{ python }}
    - numpy >=1.16
    - cython >=0.29
    - scipy >=1.1
    - pandas >=0.23.4
    - pytables >=3.4.4  # https://github.com/conda-forge/pytables-feedstock/issues/31
    - blosc >=1.14.3 
    - matplotlib >=3.0
    - networkx >=2.2
    - tqdm >=4.28.1
    - cloudpickle >=0.6.1
    - clangdev >=7.0.0
    - llvmdev >=7.0.0
    - intel-openmp >=2018.0
    - appdirs >=1.4
    - docutils >=0.13.1
    - ghalton >=0.6.1
    - jinja2 >=2.10
    - beautifulsoup4 >=4.6.3
    - lxml >=4.2.5
    - seaborn >=0.9.0
    - scikit-learn >=0.20.1
    - pytest >=4.0
    - openmp                 # [osx or linux]
    - jpn::xmle >=0.1.3
    - jpn::addict_yaml
    - pyyaml

  run:
    - python {{ python }}
    - ipython >=7.1
    - numpy >=1.16
    - scipy >=1.1
    - pandas >=0.23.4
    - pytables >=3.4.4  # https://github.com/conda-forge/pytables-feedstock/issues/31
    - blosc >=1.14.3 
    - matplotlib >=3.0
    - networkx >=2.2
    - tqdm >=4.28.1
    - cloudpickle >=0.6.1
    - intel-openmp >=2018.0
    - appdirs >=1.4
    - docutils >=0.13.1
    - ghalton >=0.6.1
    - jinja2 >=2.10
    - beautifulsoup4 >=4.6.3
    - lxml >=4.2.5
    - seaborn >=0.9.0
    - scikit-learn >=0.20.1
    - pytest >=4.0
    - openmp                 # [osx or linux]
    - jpn::xmle >=0.1.3
    - jpn::addict_yaml
    - pyyaml

#build:
#  script_env:
#   - TMPDIR
#   - DYLD_LIBRARY_PATH # [osx]
#   - MACOSX_DEPLOYMENT_TARGET

test:
  # Python imports
  imports:
    - larch
    - geopandas

  commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.
    - pytest --pyargs larch

  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  requires:
    # Put any additional test requirements here.  For example
    - pytest
    - conda-forge::fiona>=1.7.11
    - conda-forge::gdal>=2.2.4
    - conda-forge::geopandas>=0.4
    - conda-forge::krb5>=1.16
    - conda-forge::shapely>=1.6.4
    - conda-forge::libiconv

about:
  home: http://larch.newman.me
  license: GPLv3
  summary: 'Discrete Choice Modeling in Python'
  license_family: GPL

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
